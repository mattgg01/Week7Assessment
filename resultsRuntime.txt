-----RESULTS------

------tiny array-----
 insert 36.9 μs
 append 134.4 μs

------small array-----
 insert 49.6 μs
 append 135.8 μs

----medium array-----
 insert 198.7 μs
 append 197.3 μs

---large array---
insert 9.0736 ms
 append 640.5 μs

----XLArray-------
insert 894.1803 ms
append 3.076 ms


Summary of Results

The append function runs slower than the insert function when dealing with small arrays. As the arrays get larger, append runs faster than the insert function.
Append scales at 0(N), and the insert function scales with runtime complexity of 0(n^2). Append scales better.

The insert function is so slow because in order to place the new value at the beginning of the array, it has to assign new memory places for all of the other values that came before.
This is trivial when the array size is small, but when we start getting past thousands, allocating this much memory becomes very 
taxing on the system. It becomes slower because it has to do so much more memory allocation than the push method we used in the append function

